{% extends 'base.html.twig' %}

{% block title %}Confirmer votre achat
{% endblock %}

{% block body %}

{% if cart | length > 0 %}

<div class="jumbotron">
	<p class="lead">Votre commande</p>
	<hr class="my-4">
</div>
<h2>Mon Panier</h2>
<table class="table">
	<thead>
		<tr>
			<th>Produit</th>
			<th>Prix</th>
			<th>Quantité</th>
			<th>Total</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		{% for item in cart %}
		<tr>
			<td>{{ item.product.name }}</td>
			<td>{{ item.product.price }}€</td>
			<td>{{ item.quantity }}</td>
			<td>{{ item.product.price * item.quantity }}€</td>
			<td></td>
		</tr>
		{% endfor %}
	</tbody>
	<tfoot>
		<tr>
			<td colspan="3" class="text-right">Total:</td>
			<td>
				{{ totalPrice }}
				€</td>
			<td></td>
		</tr>
	</tfoot>
</table>
{% if adress %}
<h2>Votre Adresse de livraison</h2>
{{ adress.name }}
{{ adress.adress1 }}
{{ adress.adress2 }}
{{ adress.postcode }}
{{ adress.city }}
{% else %}
<div class="message">
	Vous n'avez pas renseigné d'adresse valide, cliquez sur le lien ci-dessous pour en entrer une.
</div>
<a href="{{path('adress_add')}}">
	<button class="btn btn-primary">Renseigner mon adresse</button>
</a>
{% endif %}

</br>
</br></br>

<div class="payment-container">
	{% if form is defined %}
	{{ form_start(form) }}
	<div class="errors"></div>
	{{ form_row(form.name) }}
	<div id="card-element"></div>
	<div id="card-errors" role="alert"></div>
	<button id="card-button" type="submit" data-secret="<?= $intent['client_secret'] ?>">Valider le paiement</button>
	{{ form_end(form) }}
	{% endif %}
</div>

</br></br></br></br></br>

{# <a href=" {{path('order_validated')}} " class="btn btn-success">Confirmer mon achat</a> #}
{% else %}<p>Surprise c'est vide</p>{% endif %}{% endblock %}

{% block javascripts %}
<script src="https://js.stripe.com/v3/"></script>
<script src="https://code.jquery.com/jquery-3.4.1.min.js"
	integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=" crossorigin="anonymous"></script>
<script>
	let stripe = Stripe('pk_test_jSmuHaH6ydWh7tUWzQRR4exS00UxPuO6eS');
	// Create an instance of Elements.  
	let elements = stripe.elements();
	let redirect = "/testons";

	let cardholderName = document.getElementById('cardholder-name');
	let cardButton = document.getElementById('card-button');
	let clientSecret = cardButton.dataset.secret;



	// Custom styling can be passed to options when creating an Element .
	// (Note that this demo uses a wider set of styles than the guide b elow.)
	var style = {
		base: {
			color: '#32325d',
			fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
			fontSmoothing: 'antialiased',
			fontSize: '16px',
			'::placeholder': {
				color: '#aab7c4'
			}
		},
		invalid: {
			color: '#fa755a',
			iconColor: '#fa755a'
		}
	};
	// ************************* END Styling ************************* //
	// ************************* END Styling ************************* //

	// Create an instance of the card Element.
	var card = elements.create('card', {style: style});

	// Add an instance of the card Element into the `card-element` <div>.
	card.mount('#card-element');

	// Handle real-time validation errors from the card Element.
	card.addEventListener('change', function (event) {
		var displayError = document.getElementById('card-errors');
		if (event.error) {
			displayError.textContent = event.error.message;
		} else {
			displayError.textContent = '';
		}
	});


	cardButton.addEventListener('click', () => {
		stripe.handleCardPayment(
			clientSecret, card, {
			payment_method_data: {
				billing_details: {name: cardholderName.value}
			}
		}
		).then(function (result) {
			// Quand on reçoit une réponse
			if (result.error) {
				document.getElementById("errors").innerText = result.error;
			} else {
				window.location.href = "localhost:8000/testons";
				console.log('bonjour');
			}
		});
	});
</script>
{% endblock %}